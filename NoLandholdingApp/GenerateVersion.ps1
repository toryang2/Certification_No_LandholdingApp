# PowerShell version of auto-versioning script

try {
    # Set major and minor version
    $Major = 1
    $Minor = 0

    # Get date in yyyyMMdd format (safe for sorting and versioning)
    $BuildDate = Get-Date -Format "yyyyMMdd"

    # Optional revision (can be auto-incremented with better logic later if needed)
    $Revision = 1

    # Assembly Version - safe and stable for CLR binding
    $AssemblyVersion = "$Major.$Minor.0.0"

    # File Version - actual build version, can update every build
    $FileVersion = "$Major.$Minor.$BuildDate.$Revision"

    # Compute output path (in Properties folder)
    $ScriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
    $PropertiesFolder = Join-Path -Path $ScriptPath -ChildPath "Properties"
    $VersionFile = Join-Path -Path $PropertiesFolder -ChildPath "VersionInfo.cs"

    # Ensure Properties folder exists (safe check)
    if (!(Test-Path -Path $PropertiesFolder)) {
        New-Item -ItemType Directory -Path $PropertiesFolder -Force
    }

    # Write VersionInfo.cs file
    $Content = @"
// Auto-generated by GenerateVersion.ps1
using System.Reflection;
[assembly: AssemblyVersion(`"$AssemblyVersion`")]
[assembly: AssemblyFileVersion(`"$FileVersion`")]
"@

    Set-Content -Path $VersionFile -Value $Content -Encoding UTF8

    Write-Output "✅ VersionInfo.cs generated successfully:"
    Write-Output $Content
    exit 0
}
catch {
    Write-Error "❌ Failed to generate version: $_"
    exit 1
}
